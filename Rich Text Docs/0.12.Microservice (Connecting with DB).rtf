{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh16580\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs48 \cf2 \CocoaLigature0 Microservice name: spring-boot-postgres
\fs22 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \CocoaLigature1 public class TestConnection \{\
\
	public static void main(String args[]) throws Exception \{\
		String ipAddr = InetAddress.getLocalHost().getHostName();\
		System.out.println("Printing IP address of the host " + ipAddr);\
		Map<String, String> env = System.getenv();\
		for (String envName : env.keySet()) \{\
			System.out.format("%s=%s%n", envName, env.get(envName));\
		\}\
		Thread.sleep(10000);\
		boolean connected = false;\
		while (!connected) \{\
			try \{\
				// Note the way the \ul \ulc2 postgres\ulnone  container is used here. (\ul db\ulnone  - database host/service name)\
				String url = "jdbc:postgresql://db:5432/test?autoReconnect=false&useSSL=false";\
				String user = "postgres";\
				String password = "123";\
				System.out.println("Connecting to URL " + url);\
				// Load the Connector/J driver\
				Class.forName("org.postgresql.Driver");\
				// Establish connection to PostgreSQL\
				Connection conn = DriverManager.getConnection(url, user, password);\
				if (conn != null) \{\
					System.out.println("Connection was successful");\
					connected = true;\
				\}\
			\} catch (Exception e) \{\
				System.err.println("Error connecting to database");\
				e.printStackTrace();\
				Thread.sleep(5000);\
			\}\
		\}\
	\}\
\}\CocoaLigature0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf2 \

\fs28 Dockerfile
\fs22 \
FROM kharvinagaraj1/ubuntu-openjdk11:1.0\
\
#Author of the Docker File\
# MAINTAINER Pictolearn Note: MAINTAINER has been deprecated for LABEL, \
# LABEL is a key value pair \
LABEL "Maintainer"="Nagaraj S Kharvi"\
\
ADD . /usr/local/spring-boot-postgres\
RUN cd /usr/local/spring-boot-postgres && mvn install\
CMD ["java", "-cp", "/usr/local/spring-boot-postgres/target/spring-boot-postgres-0.0.1-SNAPSHOT.jar.original", "com.example.demo.connection.TestConnection"]\
\

\fs28 Above image is build by these steps
\fs22 \
* Image is pulled from docker hub\
* Microservice gets copied to docker image directory\
* Jar gets generated once we build the image\
* Calls database connection using db service}